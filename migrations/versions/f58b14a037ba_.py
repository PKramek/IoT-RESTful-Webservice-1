# pylint: skip-file

"""empty message

Revision ID: f58b14a037ba
Revises: da6dacc30330
Create Date: 2019-09-21 20:34:02.145371

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f58b14a037ba'
down_revision = 'da6dacc30330'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reading_enumerator',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=255), nullable=False),
    sa.Column('sensor_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_type_id'], ['sensor_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('state_enumerator',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=255), nullable=False),
    sa.Column('executive_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['executive_type_id'], ['executive_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('enumerator_value')
    op.add_column('device_group', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'device_group', 'user', ['user_id'], ['id'])
    op.drop_constraint('sensor_reading_sensor_type_id_fkey', 'sensor_reading', type_='foreignkey')
    op.drop_column('sensor_reading', 'sensor_type_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensor_reading', sa.Column('sensor_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('sensor_reading_sensor_type_id_fkey', 'sensor_reading', 'sensor_type', ['sensor_type_id'], ['id'])
    op.drop_constraint(None, 'device_group', type_='foreignkey')
    op.drop_column('device_group', 'user_id')
    op.create_table('enumerator_value',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('sensor_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('executive_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['executive_type_id'], ['executive_type.id'], name='enumerator_value_executive_type_id_fkey'),
    sa.ForeignKeyConstraint(['sensor_type_id'], ['sensor_type.id'], name='enumerator_value_sensor_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enumerator_value_pkey')
    )
    op.drop_table('state_enumerator')
    op.drop_table('reading_enumerator')
    # ### end Alembic commands ###
